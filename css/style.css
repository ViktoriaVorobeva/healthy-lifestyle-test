/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{-webkit-text-size-adjust:100%}p{margin:0}details,main{display:block}h1{font-size:2em}hr{box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-size:1em;font-family:monospace,monospace}a{background-color:transparent;color:#000;text-decoration:none}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted;border-bottom:none}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{position:relative;font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{margin:0;font-size:100%;line-height:1.15;font-family:inherit}button,input{overflow:visible}button,select{text-transform:none}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{padding:0;border-style:none}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{display:table;max-width:100%;color:inherit;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto;resize:none}[type=checkbox],[type=radio],legend{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{outline-offset:-2px;-webkit-appearance:textfield}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}summary{display:list-item}[hidden],template{display:none}*,::after,::before{box-sizing:border-box}body,html{margin:0;padding:0;min-height:100vh}html{font-style:normal;font-weight:400;font-size:16px;line-height:24px;font-family:"Montserrat","Arial",sans-serif;color:#000;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-rendering:optimizeLegibility}body{width:100%;height:100%;background-color:#fff}img,video{display:block;max-width:100%;height:auto}input:-webkit-autofill{box-shadow:inset 0 0 0 1000px #fff;-webkit-text-fill-color:#000}input,select,textarea{border-radius:0}input::placeholder,textarea::placeholder{opacity:1}input:invalid,textarea:invalid{box-shadow:none}input::-ms-clear,input::-ms-reveal{display:none}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration,input[type=search]::-webkit-search-results-button,input[type=search]::-webkit-search-results-decoration{-webkit-appearance:none;appearance:none}input::-webkit-inner-spin-button,input::-webkit-outer-spin-button{margin:0;-webkit-appearance:none;appearance:none}input[type=number]{-webkit-appearance:textfield;appearance:textfield}input:matches([type=email],[type=number],[type=password],[type=search],[type=tel],[type=text],[type=url]),select,textarea{-webkit-appearance:none;appearance:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:none;appearance:none}h1,h2{padding:0;margin:0 0 20px}@font-face{font-style:normal;font-weight:400;font-family:"Montserrat";font-display:swap;src:url(../fonts/Montserrat-Regular.woff2)format("woff2"),url(../fonts/Montserrat-Regular.woff)format("woff")}@font-face{font-style:normal;font-weight:700;font-family:"Montserrat";font-display:swap;src:url(../fonts/Montserrat-Bold.woff2)format("woff2"),url(../fonts/Montserrat-Bold.woff)format("woff")}@font-face{font-style:normal;font-weight:600;font-family:"Montserrat";font-display:swap;src:url(../fonts/Montserrat-SemiBold.woff2)format("woff2"),url(../fonts/Montserrat-SemiBold.woff)format("woff")}@font-face{font-style:normal;font-weight:500;font-family:"Montserrat";font-display:swap;src:url(../fonts/Montserrat-Medium.woff2)format("woff2"),url(../fonts/Montserrat-Medium.woff)format("woff")}.wrapper{position:relative;display:flex;flex-direction:column;min-height:100vh;min-height:calc(100*var(--vh, 1vh))}.wrapper .footer,.wrapper .header{flex-shrink:0}.wrapper main{flex-grow:1}.visually-hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;white-space:nowrap;border:0;clip:rect(0 0 0 0);-webkit-clip-path:inset(100%);clip-path:inset(100%)}.scroll-lock-ios{position:fixed;overflow:hidden}.scroll-lock{overflow:hidden}.no-scrollbar{-ms-overflow-style:none;scrollbar-width:none}.no-scrollbar::-webkit-scrollbar{display:none}.no-transition{transition:none!important}.js-focus-visible :focus:not(.focus-visible){outline:0}.container{width:100%;max-width:1280px;margin:0 auto;padding:0 60px}@media (max-width:1279px){.container{padding:0 50px}}@media (max-width:1023px){.container{padding:0 45px}}@media (max-width:767px){.container{padding:0 15px}}.promo{margin-top:30px;margin-bottom:30px}@media (max-width:1023px){.promo{padding:0 25px}}@media (max-width:767px){.promo{padding:0 15px}}.questions{margin-top:30px;margin-bottom:30px}@media (max-width:1023px){.questions{padding:0 25px}}@media (max-width:767px){.questions{padding:0 15px}}.questions__fieldset{margin:0 0 20px}.questions__list{margin:0;padding:0;list-style-type:none}.questions__buttons{display:flex;flex-wrap:wrap;justify-content:center;align-items:center}.questions__button{padding:7px;margin-right:30px;background-color:#2c39f2;color:#fff;border-radius:30px}.questions__button:hover{opacity:.7}.questions__button:active{opacity:.5}.questions__button:disabled{background-color:silver}.questions__link:hover{opacity:.7}.questions__link:active{opacity:.5}.error{color:#ff1553;font-weight:700;margin-bottom:15px}.success{color:#2c39f2;margin-bottom:10px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */